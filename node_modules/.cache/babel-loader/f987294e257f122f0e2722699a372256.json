{"ast":null,"code":"var _jsxFileName = \"/Users/yiningchen/Documents/GitHub/portfolio/my-app/src/pages/Portfolio/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Portfolio.css\";\nimport { Grid, Typography, Tabs, Tab, Icon, Paper, Card, CardActionArea, CardContent, CardMedia, Grow, Dialog, DialogTitle, DialogContent } from \"@material-ui/core\";\nimport resumeData from \"../../utils/resumeData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Portfolio = () => {\n  _s();\n\n  const [tabValue, setTabValue] = useState(\"All\");\n  const [projectDialog, setProjectDialog] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: \"section pb_45 pt_45\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: \"section_title mb_30\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"section_title_text\",\n        children: \"Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabValue,\n        indicatorColor: \"white\",\n        className: \"custom_tabs\",\n        onChange: (event, newValue) => setTabValue(newValue),\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"All\",\n          value: \"All\",\n          className: tabValue == \"All\" ? \"customTabs_item active\" : \"customTabs_item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), [...new Set(resumeData.projects.map(project => project.tag))].map(tag => /*#__PURE__*/_jsxDEV(Tab, {\n          label: tag,\n          value: tag,\n          className: tabValue == \"All\" ? \"customTabs_item active\" : \"customTabs_item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: resumeData.projects.map(project => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: tabValue == project.tag || tabValue == \"All\" ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grow, {\n              in: true,\n              timeout: 1000,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: \"customCard\",\n                onClick: () => setProjectDialog(project),\n                children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                  children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                    className: \"customCard_image\",\n                    image: project.image,\n                    title: project.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      className: \"customCard_title\",\n                      children: project.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      className: \"customCard_description\",\n                      children: project.caption\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: projectDialog,\n      onClose: () => setProjectDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        onClose: () => setProjectDialog(false),\n        children: projectDialog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"\",\n        alt: \"\",\n        className: \"projectDialog_image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 1\n        }, this), \"projectDialog.description\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Portfolio, \"rwWcUQHi19yO+Bp116iPy0DNplk=\");\n\n_c = Portfolio;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["/Users/yiningchen/Documents/GitHub/portfolio/my-app/src/pages/Portfolio/Portfolio.js"],"names":["React","useState","Grid","Typography","Tabs","Tab","Icon","Paper","Card","CardActionArea","CardContent","CardMedia","Grow","Dialog","DialogTitle","DialogContent","resumeData","Portfolio","tabValue","setTabValue","projectDialog","setProjectDialog","event","newValue","Set","projects","map","project","tag","image","title","caption"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Portfolio.css\";\nimport {\n  Grid,\n  Typography,\n  Tabs,\n  Tab,\n  Icon,\n  Paper,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Grow,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n} from \"@material-ui/core\";\nimport resumeData from \"../../utils/resumeData\";\nconst Portfolio = () => {\n  const [tabValue, setTabValue] = useState(\"All\");\n  const [projectDialog, setProjectDialog] = useState(false);\n\n  return (\n    <Grid container className=\"section pb_45 pt_45\">\n      {/*Title*/}\n      <Grid item className=\"section_title mb_30\">\n        <span></span>\n        <h6 className=\"section_title_text\">Portfolio</h6>\n      </Grid>\n\n      {/*Tabs*/}\n      <Grid item xs={12}>\n        <Tabs\n          value={tabValue}\n          indicatorColor=\"white\"\n          className=\"custom_tabs\"\n          onChange={(event, newValue) => setTabValue(newValue)}\n        >\n          <Tab\n            label=\"All\"\n            value=\"All\"\n            className={\n              tabValue == \"All\" ? \"customTabs_item active\" : \"customTabs_item\"\n            }\n          />\n          {[...new Set(resumeData.projects.map((project) => project.tag))].map(\n            (tag) => (\n              <Tab\n                label={tag}\n                value={tag}\n                className={\n                  tabValue == \"All\"\n                    ? \"customTabs_item active\"\n                    : \"customTabs_item\"\n                }\n              />\n            )\n          )}\n        </Tabs>\n      </Grid>\n      {/*Projects*/}\n      <Grid item xs={12}>\n        <Grid container spacing={2}>\n          {resumeData.projects.map((project) => (\n            <>\n              {tabValue == project.tag || tabValue == \"All\" ? (\n                <Grid item>\n                  <Grow in timeout={1000}>\n                    <Card\n                      className=\"customCard\"\n                      onClick={() => setProjectDialog(project)}\n                    >\n                      <CardActionArea>\n                        <CardMedia\n                          className=\"customCard_image\"\n                          image={project.image}\n                          title={project.title}\n                        />\n                        <CardContent>\n                          <Typography className=\"customCard_title\">\n                            {project.title}\n                          </Typography>\n                          <Typography\n                            variant=\"body2\"\n                            className=\"customCard_description\"\n                          >\n                            {project.caption}\n                          </Typography>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </Grow>\n                </Grid>\n              ) : null}\n            </>\n          ))}\n        </Grid>\n      </Grid>\n      <Dialog open={projectDialog} onClose={() => setProjectDialog(false)}>\n        <DialogTitle onClose={() => setProjectDialog(false)}>\n          {projectDialog.title}\n        </DialogTitle>\n        <img src=\"\" alt=\"\" className=\"projectDialog_image\"/>\n        <DialogContent>\n<Typography></Typography>\n\n        projectDialog.description</DialogContent>\n      </Dialog>\n    </Grid>\n  );\n};\nexport default Portfolio;\n"]},"metadata":{},"sourceType":"module"}