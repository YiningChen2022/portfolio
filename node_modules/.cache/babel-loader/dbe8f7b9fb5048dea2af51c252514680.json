{"ast":null,"code":"import _toConsumableArray from\"/Users/yiningchen/Documents/GitHub/portfolio/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/yiningchen/Documents/GitHub/portfolio/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"./Portfolio.css\";import myImage from\"../../assets/images/profile.jpg\";import{Grid,Typography,Tabs,Tab,Icon,Paper,Card,CardActionArea,CardContent,CardMedia,Grow,Dialog,DialogTitle,DialogContent}from\"@material-ui/core\";import resumeData from\"../../utils/resumeData\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Portfolio=function Portfolio(){var _useState=useState(\"All\"),_useState2=_slicedToArray(_useState,2),tabValue=_useState2[0],setTabValue=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),projectDialog=_useState4[0],setProjectDialog=_useState4[1];return/*#__PURE__*/_jsxs(Grid,{container:true,spacing:1,className:\"section pb_45 pt_45\",children:[/*#__PURE__*/_jsxs(Grid,{item:true,className:\"section_title mb_20\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"h6\",{className:\"section_title_text\",children:\"Portfolio\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Tabs,{value:tabValue,indicatorColor:\"white\",className:\"customTabs\",onChange:function onChange(event,newValue){return setTabValue(newValue);},children:[/*#__PURE__*/_jsx(Tab,{label:\"All\",value:\"All\",className:tabValue==\"All\"?\"customTabs_item active\":\"customTabs_item\"}),_toConsumableArray(new Set(resumeData.projects.map(function(project){return project.tag;}))).map(function(tag){return/*#__PURE__*/_jsx(Tab,{label:tag,value:tag,className:tabValue==tag?\"customTabs_item active\":\"customTabs_item\"});})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:resumeData.projects.map(function(project){return/*#__PURE__*/_jsx(_Fragment,{children:tabValue==project.tag||tabValue==\"All\"?/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsx(Grow,{in:true,timeout:1000,children:/*#__PURE__*/_jsx(Card,{className:\"customCard\",onClick:function onClick(){return setProjectDialog(project);},children:/*#__PURE__*/_jsxs(CardActionArea,{children:[/*#__PURE__*/_jsx(CardMedia,{className:\"customCard_image\",image:project.image,title:project.title}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"customCard_title\",children:project.title}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",className:\"customCard_caption\",children:project.caption})]})]})})})}):null});})})}),/*#__PURE__*/_jsxs(Dialog,{open:projectDialog,onClose:function onClose(){return setProjectDialog(false);},className:\"projectDialog\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{onClose:function onClose(){return setProjectDialog(false);},children:projectDialog.title}),/*#__PURE__*/_jsx(\"img\",{src:projectDialog.image,alt:\"\",className:\"projectDialog_image\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(Typography,{className:\"projectDialog_description\",children:projectDialog.description})})]})]});};export default Portfolio;","map":{"version":3,"sources":["/Users/yiningchen/Documents/GitHub/portfolio/my-app/src/pages/Portfolio/Portfolio.js"],"names":["React","useState","myImage","Grid","Typography","Tabs","Tab","Icon","Paper","Card","CardActionArea","CardContent","CardMedia","Grow","Dialog","DialogTitle","DialogContent","resumeData","Portfolio","tabValue","setTabValue","projectDialog","setProjectDialog","event","newValue","Set","projects","map","project","tag","image","title","caption","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Portfolio.css\";\nimport myImage from \"../../assets/images/profile.jpg\";\nimport {\n  Grid,\n  Typography,\n  Tabs,\n  Tab,\n  Icon,\n  Paper,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Grow,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n} from \"@material-ui/core\";\nimport resumeData from \"../../utils/resumeData\";\nconst Portfolio = () => {\n  const [tabValue, setTabValue] = useState(\"All\");\n  const [projectDialog, setProjectDialog] = useState(false);\n\n  return (\n    <Grid container spacing={1} className=\"section pb_45 pt_45\">\n      {/*Title*/}\n      <Grid item className=\"section_title mb_20\">\n        <span></span>\n        <h6 className=\"section_title_text\">Portfolio</h6>\n      </Grid>\n\n      {/*Tabs*/}\n      <Grid item xs={12}>\n        <Tabs\n          value={tabValue}\n          indicatorColor=\"white\"\n          className=\"customTabs\"\n          onChange={(event, newValue) => setTabValue(newValue)}\n        >\n          <Tab\n            label=\"All\"\n            value=\"All\"\n            className={\n              tabValue == \"All\" ? \"customTabs_item active\" : \"customTabs_item\"\n            }\n          />\n          {[...new Set(resumeData.projects.map((project) => project.tag))].map(\n            (tag) => (\n              <Tab\n                label={tag}\n                value={tag}\n                className={\n                  tabValue == tag ? \"customTabs_item active\" : \"customTabs_item\"\n                }\n              />\n            )\n          )}\n        </Tabs>\n      </Grid>\n      {/*Projects*/}\n      <Grid item xs={12}>\n        <Grid container spacing={3}>\n          {resumeData.projects.map((project) => (\n            <>\n              {tabValue == project.tag || tabValue == \"All\" ? (\n                <Grid item xs={12} sm={6} md={4}>\n                  <Grow in timeout={1000}>\n                    <Card\n                      className=\"customCard\"\n                      onClick={() => setProjectDialog(project)}\n                    >\n                      <CardActionArea>\n                        <CardMedia\n                          className=\"customCard_image\"\n                          image={project.image}\n                          title={project.title}\n                        />\n                        <CardContent>\n                          <Typography\n                            variant={\"body2\"}\n                            className=\"customCard_title\"\n                          >\n                            {project.title}\n                          </Typography>\n                          <Typography\n                            variant=\"caption\"\n                            className=\"customCard_caption\"\n                          >\n                            {project.caption}\n                          </Typography>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </Grow>\n                </Grid>\n              ) : null}\n            </>\n          ))}\n        </Grid>\n      </Grid>\n      <Dialog\n        open={projectDialog}\n        onClose={() => setProjectDialog(false)}\n        className=\"projectDialog\"\n        fullWidth\n      >\n        <DialogTitle onClose={() => setProjectDialog(false)}>\n          {projectDialog.title}\n        </DialogTitle>\n        <img src={projectDialog.image} alt=\"\" className=\"projectDialog_image\" />\n        <DialogContent>\n          <Typography className=\"projectDialog_description\">\n            {projectDialog.description}\n          </Typography>\n        </DialogContent>\n      </Dialog>\n    </Grid>\n  );\n};\nexport default Portfolio;\n"]},"metadata":{},"sourceType":"module"}