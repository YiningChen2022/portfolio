[{"/Users/yiningchen/Documents/GitHub/portfolio/src/index.js":"1","/Users/yiningchen/Documents/GitHub/portfolio/src/App.js":"2","/Users/yiningchen/Documents/GitHub/portfolio/src/reportWebVitals.js":"3","/Users/yiningchen/Documents/GitHub/portfolio/src/components/Header/Header.js":"4","/Users/yiningchen/Documents/GitHub/portfolio/src/components/Footer/Footer.js":"5","/Users/yiningchen/Documents/GitHub/portfolio/src/components/Profile/Profile.js":"6","/Users/yiningchen/Documents/GitHub/portfolio/src/pages/Portfolio/Portfolio.js":"7","/Users/yiningchen/Documents/GitHub/portfolio/src/pages/Resume/Resume.js":"8","/Users/yiningchen/Documents/GitHub/portfolio/src/components/Button/Button.js":"9","/Users/yiningchen/Documents/GitHub/portfolio/src/utils/resumeData.js":"10","/Users/yiningchen/Documents/GitHub/portfolio/src/components/Timeline/CustomTimeline.js":"11"},{"size":500,"mtime":1615259683680,"results":"12","hashOfConfig":"13"},{"size":1125,"mtime":1615341526972,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1615259683681,"results":"15","hashOfConfig":"13"},{"size":1752,"mtime":1615325665362,"results":"16","hashOfConfig":"13"},{"size":765,"mtime":1615340713140,"results":"17","hashOfConfig":"13"},{"size":2463,"mtime":1615345823760,"results":"18","hashOfConfig":"13"},{"size":3629,"mtime":1615418686436,"results":"19","hashOfConfig":"13"},{"size":5257,"mtime":1615404448495,"results":"20","hashOfConfig":"13"},{"size":373,"mtime":1615323952109,"results":"21","hashOfConfig":"13"},{"size":5698,"mtime":1615427682258,"results":"22","hashOfConfig":"13"},{"size":1448,"mtime":1615422667317,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"9w4duw",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"/Users/yiningchen/Documents/GitHub/portfolio/src/index.js",[],["52","53"],"/Users/yiningchen/Documents/GitHub/portfolio/src/App.js",[],"/Users/yiningchen/Documents/GitHub/portfolio/src/reportWebVitals.js",[],"/Users/yiningchen/Documents/GitHub/portfolio/src/components/Header/Header.js",["54","55","56","57","58","59","60","61"],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Button,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\nimport { HomeRounded } from \"@material-ui/icons\";\nimport resumeData from \"../../utils/resumeData\";\nimport CustomButton from \"../Button/Button.js\";\nimport \"./Header.css\";\nconst Header = (props) => {\n  //if prop exists\n  const pathName = props?.location?.pathName;\n\n  return (\n    <Navbar expand=\"lg\" sticky=\"top\" className=\"header\">\n      {/*Home link*/}\n      <Nav.Link as={NavLink} to=\"/\" className=\"header_navlink\">\n        <Navbar.Brand className=\"header_home\">\n          <HomeRounded />\n        </Navbar.Brand>\n      </Nav.Link>\n      <Navbar.Toggle />\n      <Navbar.Collapse>\n        <Nav className=\"header_left\">\n          {/*Resume Link*/}\n          <Nav.Link\n            as={NavLink}\n            to=\"/\"\n            className={pathName == \"/\" ? \"header_link_active\" : \"header_link\"}\n          >\n            Resume\n          </Nav.Link>\n          {/*Portfolio Link*/}\n          <Nav.Link\n            as={NavLink}\n            to=\"/portfolio\"\n            className={\n              pathName == \"/portfolio\" ? \"header_link_active\" : \"header_link\"\n            }\n          >\n            Portfolio\n          </Nav.Link>\n        </Nav>\n        <div className=\"header_right\">\n          {Object.keys(resumeData.socials).map((key) => (\n            <a href={resumeData.socials[key].link} target=\"_blank\">\n              {resumeData.socials[key].icon}\n            </a>\n          ))}\n          <CustomButton text={\"Hire Me\"} />\n        </div>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\nexport default withRouter(Header);\n","/Users/yiningchen/Documents/GitHub/portfolio/src/components/Footer/Footer.js",["62"],"import React from \"react\";\nimport \"./Footer.css\";\nimport { Typography } from \"@material-ui/core\";\nimport resumeData from \"../../utils/resumeData\";\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer-left\">\n        <Typography className=\"footer_name\">{resumeData.name}</Typography>\n      </div>\n      <div className=\"footer-right\">\n        <Typography className=\"footer_copyright\">\n          Designed and Developed by{\" \"}\n          <a href=\"/\" target=\"_blank\">\n            Yining Chen\n          </a>\n          <br />\n          Clone idea from{\" \"}\n          <a href=\"https://themeforest.net/\" target=\"_blank\">\n            Travonline\n          </a>\n        </Typography>\n      </div>\n    </div>\n  );\n};\nexport default Footer;\n","/Users/yiningchen/Documents/GitHub/portfolio/src/components/Profile/Profile.js",["63","64"],"import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport \"./Profile.css\";\nimport myImage from \"../../assets/images/profile.jpg\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport CustomButton from \"../Button/Button\";\nimport CustomTimeline, {\n  CustomTimelineSeparator,\n} from \"../Timeline/CustomTimeline\";\nimport resumeData from \"../../utils/resumeData\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\n\nconst CustomTimelineItem = ({ title, text, link }) => (\n  <TimelineItem>\n    <CustomTimelineSeparator />\n    <TimelineContent className=\"timeline_content\">\n      {link ? (\n        <Typography className=\"timelineItem_text\">\n          <span>{title}:</span>\n          <a href={link} target=\"_blank\">\n            {text}\n          </a>\n        </Typography>\n      ) : (\n        <Typography className=\"timelineItem_text\">\n          <span>{title}:</span>\n          {text}\n        </Typography>\n      )}\n    </TimelineContent>\n  </TimelineItem>\n);\n\nconst Profile = () => {\n  return (\n    <div className=\"profile container_shadow\">\n      <div className=\"profile_name\">\n        <Typography className=\"name\">{resumeData.name}</Typography>\n        <Typography className=\"title\">{resumeData.title}</Typography>\n      </div>\n      <figure className=\"profile_image\">\n        <img src={myImage} alt=\"\" />\n      </figure>\n      <div className=\"profile_information\">\n        <CustomTimeline icon={<PersonOutlineOutlinedIcon />}>\n          <CustomTimelineItem\n            title=\"Name\"\n            text={resumeData.name}\n          ></CustomTimelineItem>\n          <CustomTimelineItem\n            title=\"Email\"\n            text={resumeData.email}\n          ></CustomTimelineItem>\n          <CustomTimelineItem\n            title=\"Phone\"\n            text={resumeData.phone}\n          ></CustomTimelineItem>\n          {Object.keys(resumeData.socials).map((key) => (\n            <CustomTimelineItem\n              title={key}\n              text={resumeData.socials[key].text}\n              link={resumeData.socials[key].link}\n            ></CustomTimelineItem>\n          ))}\n        </CustomTimeline>\n        <div ClassName=\"button_container\" style={{ display: \"flex\" }}>\n          <CustomButton text={\"Download Resume\"} />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Profile;\n","/Users/yiningchen/Documents/GitHub/portfolio/src/pages/Portfolio/Portfolio.js",["65","66","67","68","69","70","71"],"import React, { useState } from \"react\";\nimport \"./Portfolio.css\";\nimport myImage from \"../../assets/images/profile.jpg\";\nimport {\n  Grid,\n  Typography,\n  Tabs,\n  Tab,\n  Icon,\n  Paper,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Grow,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n} from \"@material-ui/core\";\nimport resumeData from \"../../utils/resumeData\";\nconst Portfolio = () => {\n  const [tabValue, setTabValue] = useState(\"All\");\n  const [projectDialog, setProjectDialog] = useState(false);\n\n  return (\n    <Grid container spacing={1} className=\"section pb_45 pt_45\">\n      {/*Title*/}\n      <Grid item className=\"section_title mb_20\">\n        <span></span>\n        <h6 className=\"section_title_text\">Portfolio</h6>\n      </Grid>\n\n      {/*Tabs*/}\n      <Grid item xs={12}>\n        <Tabs\n          value={tabValue}\n          indicatorColor=\"white\"\n          className=\"customTabs\"\n          onChange={(event, newValue) => setTabValue(newValue)}\n        >\n          <Tab\n            label=\"All\"\n            value=\"All\"\n            className={\n              tabValue == \"All\" ? \"customTabs_item active\" : \"customTabs_item\"\n            }\n          />\n          {[...new Set(resumeData.projects.map((project) => project.tag))].map(\n            (tag) => (\n              <Tab\n                label={tag}\n                value={tag}\n                className={\n                  tabValue == tag ? \"customTabs_item active\" : \"customTabs_item\"\n                }\n              />\n            )\n          )}\n        </Tabs>\n      </Grid>\n      {/*Projects*/}\n      <Grid item xs={12}>\n        <Grid container spacing={3}>\n          {resumeData.projects.map((project) => (\n            <>\n              {tabValue == project.tag || tabValue == \"All\" ? (\n                <Grid item xs={12} sm={6} md={4}>\n                  <Grow in timeout={1000}>\n                    <Card\n                      className=\"customCard\"\n                      onClick={() => setProjectDialog(project)}\n                    >\n                      <CardActionArea>\n                        <CardMedia\n                          className=\"customCard_image\"\n                          image={project.image}\n                          title={project.title}\n                        />\n                        <CardContent>\n                          <Typography\n                            variant={\"body2\"}\n                            className=\"customCard_title\"\n                          >\n                            {project.title}\n                          </Typography>\n                          <Typography\n                            variant=\"caption\"\n                            className=\"customCard_caption\"\n                          >\n                            {project.caption}\n                          </Typography>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </Grow>\n                </Grid>\n              ) : null}\n            </>\n          ))}\n        </Grid>\n      </Grid>\n      <Dialog\n        open={projectDialog}\n        onClose={() => setProjectDialog(false)}\n        className=\"projectDialog\"\n        fullWidth\n      >\n        <DialogTitle onClose={() => setProjectDialog(false)}>\n          {projectDialog.title}\n        </DialogTitle>\n        <img src={projectDialog.image} alt=\"\" className=\"projectDialog_image\" />\n        <DialogContent>\n          <Typography className=\"projectDialog_description\">\n            {projectDialog.description}\n          </Typography>\n        </DialogContent>\n      </Dialog>\n    </Grid>\n  );\n};\nexport default Portfolio;\n","/Users/yiningchen/Documents/GitHub/portfolio/src/pages/Resume/Resume.js",[],"/Users/yiningchen/Documents/GitHub/portfolio/src/components/Button/Button.js",[],"/Users/yiningchen/Documents/GitHub/portfolio/src/utils/resumeData.js",["72"],"/Users/yiningchen/Documents/GitHub/portfolio/src/components/Timeline/CustomTimeline.js",["73","74"],"import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport \"./Timeline.css\";\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\n\nconst CustomTimeline = ({ title, children, icon }) => {\n  return (\n    <Timeline className={\"timeline\"}>\n      {/*Item Header */}\n      <TimelineItem className={\"timeline_firstItem\"}>\n        <TimelineSeparator>\n          <TimelineDot className={\"timeline_dot_header\"}>\n            {icon}\n          </TimelineDot>\n          <TimelineConnector />\n        </TimelineSeparator>\n        <TimelineContent>\n          <Typography variant=\"h6\" className=\"timeline_header\">\n            {title}\n          </Typography>\n        </TimelineContent>\n      </TimelineItem>\n      {children}\n\n\n    </Timeline>\n  );\n};\nexport const CustomTimelineSeparator = () => (\n  <TimelineSeparator className={\"separator_padding\"}>\n    <TimelineDot variant={\"outlined\"} className={\"timeline_dot\"} />\n    <TimelineConnector />\n  </TimelineSeparator>\n);\nexport default CustomTimeline;\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":4,"column":3,"nodeType":"81","messageId":"82","endLine":4,"endColumn":9},{"ruleId":"79","severity":1,"message":"83","line":5,"column":3,"nodeType":"81","messageId":"82","endLine":5,"endColumn":7},{"ruleId":"79","severity":1,"message":"84","line":6,"column":3,"nodeType":"81","messageId":"82","endLine":6,"endColumn":14},{"ruleId":"79","severity":1,"message":"85","line":9,"column":3,"nodeType":"81","messageId":"82","endLine":9,"endColumn":14},{"ruleId":"79","severity":1,"message":"86","line":11,"column":10,"nodeType":"81","messageId":"82","endLine":11,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":35,"column":33,"nodeType":"89","messageId":"90","endLine":35,"endColumn":35},{"ruleId":"87","severity":1,"message":"88","line":44,"column":24,"nodeType":"89","messageId":"90","endLine":44,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":52,"column":13,"nodeType":"93","endLine":52,"endColumn":68},{"ruleId":"91","severity":1,"message":"92","line":19,"column":11,"nodeType":"93","endLine":19,"endColumn":62},{"ruleId":"79","severity":1,"message":"94","line":12,"column":8,"nodeType":"81","messageId":"82","endLine":12,"endColumn":18},{"ruleId":"91","severity":1,"message":"92","line":22,"column":11,"nodeType":"93","endLine":22,"endColumn":42},{"ruleId":"79","severity":1,"message":"95","line":3,"column":8,"nodeType":"81","messageId":"82","endLine":3,"endColumn":15},{"ruleId":"79","severity":1,"message":"96","line":9,"column":3,"nodeType":"81","messageId":"82","endLine":9,"endColumn":7},{"ruleId":"79","severity":1,"message":"97","line":10,"column":3,"nodeType":"81","messageId":"82","endLine":10,"endColumn":8},{"ruleId":"87","severity":1,"message":"88","line":45,"column":24,"nodeType":"89","messageId":"90","endLine":45,"endColumn":26},{"ruleId":"87","severity":1,"message":"88","line":54,"column":28,"nodeType":"89","messageId":"90","endLine":54,"endColumn":30},{"ruleId":"87","severity":1,"message":"88","line":66,"column":25,"nodeType":"89","messageId":"90","endLine":66,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":66,"column":52,"nodeType":"89","messageId":"90","endLine":66,"endColumn":54},{"ruleId":"98","severity":1,"message":"99","line":11,"column":1,"nodeType":"100","endLine":135,"endColumn":3},{"ruleId":"79","severity":1,"message":"101","line":9,"column":8,"nodeType":"81","messageId":"82","endLine":9,"endColumn":16},{"ruleId":"79","severity":1,"message":"102","line":11,"column":8,"nodeType":"81","messageId":"82","endLine":11,"endColumn":33},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'GetAppIcon' is defined but never used.","'myImage' is defined but never used.","'Icon' is defined but never used.","'Paper' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'WorkIcon' is defined but never used.","'PersonOutlineOutlinedIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]