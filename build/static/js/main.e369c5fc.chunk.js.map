{"version":3,"sources":["assets/images/profile.jpg","components/Button/Button.js","components/Timeline/CustomTimeline.js","assets/images/emailer.png","assets/images/property.png","assets/images/db.png","assets/images/ODP.png","utils/resumeData.js","components/Profile/Profile.js","components/Header/Header.js","components/Footer/Footer.js","pages/Portfolio/Portfolio.js","pages/Resume/Resume.js","App.js","reportWebVitals.js","index.js"],"names":["CustomButton","text","icon","Button","className","endIcon","CustomTimelineSeparator","TimelineSeparator","TimelineDot","variant","TimelineConnector","CustomTimeline","title","children","Timeline","TimelineItem","TimelineContent","Typography","name","email","phone","socials","Linkedin","link","Github","about","experiences","date","decription","education","services","description","skills","destription","projects","tag","image","db","caption","property","emailer","ODP","CustomTimelineItem","href","target","Profile","resumeData","src","myImage","alt","Object","keys","map","key","ClassName","style","display","withRouter","props","pathName","location","Navbar","expand","sticky","Nav","Link","as","NavLink","to","Brand","HomeRounded","Toggle","Collapse","Footer","Portfolio","useState","tabValue","setTabValue","projectDialog","setProjectDialog","Grid","container","spacing","item","xs","Tabs","value","indicatorColor","onChange","event","newValue","Tab","label","Set","project","sm","md","Grow","in","timeout","Card","onClick","CardActionArea","CardMedia","CardContent","Dialog","open","onClose","fullWidth","DialogTitle","DialogContent","Resume","experience","justify","service","Icon","skill","Paper","elevation","element","App","Container","lg","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e369c5fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile.3990ccd1.jpg\";","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport \"./Button.css\";\n\nconst CustomButton = ({ text, icon }) => {\n  return (\n    <Button\n      className=\"custom_btn\"\n      endIcon={icon ? <div className=\"btn_icon_container\">{icon}</div> : null}\n    >\n      <span className=\"btn_text\">{text}</span>\n    </Button>\n  );\n};\nexport default CustomButton;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport \"./Timeline.css\";\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\n\nconst CustomTimeline = ({ title, children, icon }) => {\n  return (\n    <Timeline className={\"timeline\"}>\n      {/*Item Header */}\n      <TimelineItem className={\"timeline_firstItem\"}>\n        <TimelineSeparator>\n          <TimelineDot className={\"timeline_dot_header\"}>\n            {icon}\n          </TimelineDot>\n          <TimelineConnector />\n        </TimelineSeparator>\n        <TimelineContent>\n          <Typography variant=\"h6\" className=\"timeline_header\">\n            {title}\n          </Typography>\n        </TimelineContent>\n      </TimelineItem>\n      {children}\n\n\n    </Timeline>\n  );\n};\nexport const CustomTimelineSeparator = () => (\n  <TimelineSeparator className={\"separator_padding\"}>\n    <TimelineDot variant={\"outlined\"} className={\"timeline_dot\"} />\n    <TimelineConnector />\n  </TimelineSeparator>\n);\nexport default CustomTimeline;\n","export default __webpack_public_path__ + \"static/media/emailer.7751dc69.png\";","export default __webpack_public_path__ + \"static/media/property.8743b4d6.png\";","export default __webpack_public_path__ + \"static/media/db.faf74f53.png\";","export default __webpack_public_path__ + \"static/media/ODP.e348facc.png\";","import React from \"react\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport emailer from \"../assets/images/emailer.png\";\nimport property from \"../assets/images/property.png\";\nimport db from \"../assets/images/db.png\";\nimport ODP from \"../assets/images/ODP.png\";\nexport default {\n  name: \"Yining Chen\",\n  title: \"Full Stack Developer\",\n  email: \"chen.yinin@northeastern.edu\",\n\n  phone: \"732 668 0885\",\n  socials: {\n    Linkedin: {\n      link: \"http://linkedin.com/in/yiningchen2018\",\n      text: \"View My Linkedin\",\n      icon: <LinkedInIcon />,\n    },\n    Github: {\n      link: \"https://github.com/YiningChen2022\",\n      text: \"View My GitHub\",\n      icon: <GitHubIcon />,\n    },\n  },\n  about:\n    \"I am a creative software developer. My technical expertise includes a strong foundation in a programming language(including Java, Python, and SQL) and advanced knowledge of developer applications, tools, methodologies, and best practices (including OOD, web-development using React, Redux, and Spring MVC).\\n\\n  I am also a freelance painter with 2+ years of painting and business management experience. With that experience, I can be innovative. I understand how to deal with clients and deliver high-quality products on a timely schedule. I am Result-oriented, patient, quick learner, and team player eager to take engineering skills and interpersonal skills into innovative program development.\",\n  experiences: [\n    {\n      title: \"Data Engineer\",\n      date: \"05/2019-09/2019\",\n      decription:\n        \" Redesigned and organized a program using R. Forecasted and analyzed the IBNR reserves for a 10-year record. Simplified the program procedures and optimized the program performance. Reduced the program run time by 90%. Designed and implemented interactive visualizations by processing and analyzing datasets\",\n    },\n    {\n      title: \"Freelance painter\",\n      date: \"12/2015-06/2018\",\n      decription: \"Freelance painting\",\n    },\n  ],\n  education: [\n    {\n      title: \"Northeastern University\",\n      date: \"09/2020-present\",\n      decription: \"Information Systems\",\n    },\n    {\n      title: \"Rutgers University\",\n      date: \"01/2017-05/2020\",\n      decription: \"Dual major in Statistics and Labor studies\",\n    },\n  ],\n  services: [\n    {\n      title: \"Web Development\",\n      description: \"i have been a web developer for 2 years\",\n      icon: <LanguageIcon />,\n    },\n    {\n      title: \"Branding Identity\",\n      description: \"i have been a web developer for 2 years\",\n      icon: <LanguageIcon />,\n    },\n    {\n      title: \"Web Dev\",\n      description: \"i have been a web developer for 2 years\",\n      icon: <LanguageIcon />,\n    },\n  ],\n\n  skills: [\n    {\n      title: \"FRONT-END\",\n      destription: [\"ReactJS\", \"JavaScript\", \"BootStrap\", \"Material UI\"],\n    },\n    {\n      title: \"BACK-END\",\n      destription: [\n        \"Spring boot\",\n        \"Microservices\",\n        \"NodeJS\",\n        \"Express\",\n        \"Java\",\n        \"Python\",\n      ],\n    },\n    {\n      title: \"DATABASES\",\n      destription: [\"Ms SQL Server\", \"MySQL\", \"MongoDB\"],\n    },\n    {\n      title: \"SOURCE CONTROL\",\n      destription: [\"GitHub\", \"Git\"],\n    },\n  ],\n  projects: [\n    {\n      tag: \"DataBase\",\n      image: db,\n      title: \"Online Retailing System DataBase\",\n      caption: \"SQLserver, MySQLWorkBench, MongoDB\",\n      description:\n        \"The purpose of this database is to maintain data used for business managers to purchase goods from vendors or ship directly from inventory;  \\n\\n  track orders’ shipment information; check inventory value and provide customer services. \\n\\n some other features include\t Triggers, Computed Columns, Table-Level Check Constrains with SQL Server. \",\n    },\n    {\n      tag: \"Java\",\n      image: property,\n      title: \"TeamFolio- Property Management System\",\n      caption: \"Java,OOD, System Design\",\n      description:\n        \" Designed an object-oriented system. Developed Engineering system specifications, drawings, and Writing diagrams using tools MYSQLWorkbench or Lucid Chart\\n\\nProgramed and debugged the system software. Implemented useful features such as conversation dialog, location maps as well as data analysis tools\\n\\nBuilt, tested, and deploy controlled releases of the user interface\",\n    },\n    {\n      tag: \"React\",\n      image: emailer,\n      title: \"Emailer\",\n      caption: \"React, Redux, Node.js, Express\",\n      description:\n        \"Handled full-stack development for a web application. Implementation includes sending email surveys to customers and to retrieve feedback.\t\\n\\n  Programed the front-end using React, Redux reducers. Implemented back-end Request handling using Node.js and Express. Managed data with MongoDB. \\n\\n  Integrated Passport.js, OAuth2.0, Stripe, SendGrid for user authentication and payment.\",\n    },\n    {\n      tag: \"Data Science\",\n      image: ODP,\n      title: \"IBNR Reserves Prediction\",\n      caption: \"Machine learning, Stochastic Modeling\",\n      description:\n        \"Forecasted the IBNR reserves efficiently in R. My work automatically Bootstrap 19 types of insurance’s paid loss triangle ten thousand times in under 5 minutes. \\n\\n Designed and implemented interactive visualizations by processing and analyzing datasets \",\n    },\n  ],\n};\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport \"./Profile.css\";\nimport myImage from \"../../assets/images/profile.jpg\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport CustomButton from \"../Button/Button\";\nimport CustomTimeline, {\n  CustomTimelineSeparator,\n} from \"../Timeline/CustomTimeline\";\nimport resumeData from \"../../utils/resumeData\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\n\nconst CustomTimelineItem = ({ title, text, link }) => (\n  <TimelineItem>\n    <CustomTimelineSeparator />\n    <TimelineContent className=\"timeline_content\">\n      {link ? (\n        <Typography className=\"timelineItem_text\">\n          <span>{title}:</span>\n          <a href={link} target=\"_blank\">\n            {text}\n          </a>\n        </Typography>\n      ) : (\n        <Typography className=\"timelineItem_text\">\n          <span>{title}:</span>\n          {text}\n        </Typography>\n      )}\n    </TimelineContent>\n  </TimelineItem>\n);\n\nconst Profile = () => {\n  return (\n    <div className=\"profile container_shadow\">\n      <div className=\"profile_name\">\n        <Typography className=\"name\">{resumeData.name}</Typography>\n        <Typography className=\"title\">{resumeData.title}</Typography>\n      </div>\n      <figure className=\"profile_image\">\n        <img src={myImage} alt=\"\" />\n      </figure>\n      <div className=\"profile_information\">\n        <CustomTimeline icon={<PersonOutlineOutlinedIcon />}>\n          <CustomTimelineItem\n            title=\"Name\"\n            text={resumeData.name}\n          ></CustomTimelineItem>\n          <CustomTimelineItem\n            title=\"Email\"\n            text={resumeData.email}\n          ></CustomTimelineItem>\n          <CustomTimelineItem\n            title=\"Phone\"\n            text={resumeData.phone}\n          ></CustomTimelineItem>\n          {Object.keys(resumeData.socials).map((key) => (\n            <CustomTimelineItem\n              title={key}\n              text={resumeData.socials[key].text}\n              link={resumeData.socials[key].link}\n            ></CustomTimelineItem>\n          ))}\n        </CustomTimeline>\n        <div ClassName=\"button_container\" style={{ display: \"flex\" }}>\n          <CustomButton text={\"Download Resume\"} />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Button,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\nimport { HomeRounded } from \"@material-ui/icons\";\nimport resumeData from \"../../utils/resumeData\";\nimport CustomButton from \"../Button/Button.js\";\nimport \"./Header.css\";\nconst Header = (props) => {\n  //if prop exists\n  const pathName = props?.location?.pathName;\n\n  return (\n    <Navbar expand=\"lg\" sticky=\"top\" className=\"header\">\n      {/*Home link*/}\n      <Nav.Link as={NavLink} to=\"/\" className=\"header_navlink\">\n        <Navbar.Brand className=\"header_home\">\n          <HomeRounded />\n        </Navbar.Brand>\n      </Nav.Link>\n      <Navbar.Toggle />\n      <Navbar.Collapse>\n        <Nav className=\"header_left\">\n          {/*Resume Link*/}\n          <Nav.Link\n            as={NavLink}\n            to=\"/\"\n            className={pathName == \"/\" ? \"header_link_active\" : \"header_link\"}\n          >\n            Resume\n          </Nav.Link>\n          {/*Portfolio Link*/}\n          <Nav.Link\n            as={NavLink}\n            to=\"/portfolio\"\n            className={\n              pathName == \"/portfolio\" ? \"header_link_active\" : \"header_link\"\n            }\n          >\n            Portfolio\n          </Nav.Link>\n        </Nav>\n        <div className=\"header_right\">\n          {Object.keys(resumeData.socials).map((key) => (\n            <a href={resumeData.socials[key].link} target=\"_blank\">\n              {resumeData.socials[key].icon}\n            </a>\n          ))}\n          <CustomButton text={\"Hire Me\"} />\n        </div>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\nexport default withRouter(Header);\n","import React from \"react\";\nimport \"./Footer.css\";\nimport { Typography } from \"@material-ui/core\";\nimport resumeData from \"../../utils/resumeData\";\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer-left\">\n        <Typography className=\"footer_name\">{resumeData.name}</Typography>\n      </div>\n      <div className=\"footer-right\">\n        <Typography className=\"footer_copyright\">\n          Designed and Developed by{\" \"}\n          <a href=\"/\" target=\"_blank\">\n            Yining Chen\n          </a>\n          <br />\n          Clone idea from{\" \"}\n          <a href=\"https://themeforest.net/\" target=\"_blank\">\n            Travonline\n          </a>\n        </Typography>\n      </div>\n    </div>\n  );\n};\nexport default Footer;\n","import React, { useState } from \"react\";\nimport \"./Portfolio.css\";\nimport myImage from \"../../assets/images/profile.jpg\";\nimport {\n  Grid,\n  Typography,\n  Tabs,\n  Tab,\n  Icon,\n  Paper,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Grow,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n} from \"@material-ui/core\";\nimport resumeData from \"../../utils/resumeData\";\nconst Portfolio = () => {\n  const [tabValue, setTabValue] = useState(\"All\");\n  const [projectDialog, setProjectDialog] = useState(false);\n\n  return (\n    <Grid container spacing={1} className=\"section pb_45 pt_45\">\n      {/*Title*/}\n      <Grid item className=\"section_title mb_20\">\n        <span></span>\n        <h6 className=\"section_title_text\">Portfolio</h6>\n      </Grid>\n\n      {/*Tabs*/}\n      <Grid item xs={12}>\n        <Tabs\n          value={tabValue}\n          indicatorColor=\"white\"\n          className=\"customTabs\"\n          onChange={(event, newValue) => setTabValue(newValue)}\n        >\n          <Tab\n            label=\"All\"\n            value=\"All\"\n            className={\n              tabValue == \"All\" ? \"customTabs_item active\" : \"customTabs_item\"\n            }\n          />\n          {[...new Set(resumeData.projects.map((project) => project.tag))].map(\n            (tag) => (\n              <Tab\n                label={tag}\n                value={tag}\n                className={\n                  tabValue == tag ? \"customTabs_item active\" : \"customTabs_item\"\n                }\n              />\n            )\n          )}\n        </Tabs>\n      </Grid>\n      {/*Projects*/}\n      <Grid item xs={12}>\n        <Grid container spacing={3}>\n          {resumeData.projects.map((project) => (\n            <>\n              {tabValue == project.tag || tabValue == \"All\" ? (\n                <Grid item xs={12} sm={6} md={4}>\n                  <Grow in timeout={1000}>\n                    <Card\n                      className=\"customCard\"\n                      onClick={() => setProjectDialog(project)}\n                    >\n                      <CardActionArea>\n                        <CardMedia\n                          className=\"customCard_image\"\n                          image={project.image}\n                          title={project.title}\n                        />\n                        <CardContent>\n                          <Typography\n                            variant={\"body2\"}\n                            className=\"customCard_title\"\n                          >\n                            {project.title}\n                          </Typography>\n                          <Typography\n                            variant=\"caption\"\n                            className=\"customCard_caption\"\n                          >\n                            {project.caption}\n                          </Typography>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </Grow>\n                </Grid>\n              ) : null}\n            </>\n          ))}\n        </Grid>\n      </Grid>\n      <Dialog\n        open={projectDialog}\n        onClose={() => setProjectDialog(false)}\n        className=\"projectDialog\"\n        fullWidth\n      >\n        <DialogTitle onClose={() => setProjectDialog(false)}>\n          {projectDialog.title}\n        </DialogTitle>\n        <img src={projectDialog.image} alt=\"\" className=\"projectDialog_image\" />\n        <DialogContent>\n          <Typography className=\"projectDialog_description\">\n            {projectDialog.description}\n          </Typography>\n        </DialogContent>\n      </Dialog>\n    </Grid>\n  );\n};\nexport default Portfolio;\n","import React from \"react\";\nimport \"./Resume.css\";\nimport { Grid, Typography, Icon, Paper } from \"@material-ui/core\";\nimport resumeData from \"../../utils/resumeData\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport CustomTimeline, {\n  CustomTimelineSeparator,\n} from \"../../components/Timeline/CustomTimeline\";\nimport WorkOutlineIcon from \"@material-ui/icons/WorkOutline\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nconst Resume = () => {\n  return (\n    <>\n      {/*About me*/}\n      <Grid container className=\"section pb_45 pt_45\" >\n        <Grid item className=\"section_title mb_30\">\n          <span></span>\n          <h6 className=\"section_title_text\">About Me</h6>\n        </Grid>\n        <Grid item xs={12}></Grid>\n        <Typography variant=\"body2\" className=\"aboutme_text mb_30\">\n          {resumeData.about}\n        </Typography>\n      </Grid>\n      {/*Education and experiences*/}\n      <Grid container className=\"section pb_45\">\n        <Grid item className=\"section_title mb_30\">\n          <span></span>\n          <h6 className=\"section_title_text\">Resume</h6>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container className=\"resume_timeline\">\n            {/*Experience*/}\n            <Grid item sm={12} md={6}>\n              <CustomTimeline title=\"Experience\" icon={<WorkOutlineIcon />}>\n                {resumeData.experiences.map((experience) => (\n                  <TimelineItem>\n                    <CustomTimelineSeparator />\n                    <TimelineContent className=\"timeline_content\">\n                      <Typography className=\"timeline_title\">\n                        {experience.title}\n                      </Typography>\n                      <Typography variant=\"caption\" className=\"timeline_date\">\n                        {experience.date}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        className=\"timeline_description\"\n                      >\n                        {experience.decription}\n                      </Typography>\n                    </TimelineContent>\n                  </TimelineItem>\n                ))}\n              </CustomTimeline>\n            </Grid>\n            {/*Education*/}\n            <Grid item sm={12} md={6}>\n              <CustomTimeline title=\"Education\" icon={<SchoolIcon />}>\n                {resumeData.education.map((education) => (\n                  <TimelineItem>\n                    <CustomTimelineSeparator />\n                    <TimelineContent className=\"timeline_content\">\n                      <Typography className=\"timeline_title\">\n                        {education.title}\n                      </Typography>\n                      <Typography variant=\"caption\" className=\"timeline_date\">\n                        {education.date}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        className=\"timeline_description\"\n                      >\n                        {education.decription}\n                      </Typography>\n                    </TimelineContent>\n                  </TimelineItem>\n                ))}\n              </CustomTimeline>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      {/*Services*/}\n      <Grid container className=\"section pb_45\">\n        <Grid item className=\"section_title mb_30\">\n          <span></span>\n          <h6 className=\"section_title_text\">My Services</h6>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={3} justify=\"space-around\" className=\"mb_30\">\n            {resumeData.services.map((service) => (\n              <Grid item xs={12} sm={6} md={3}>\n                <div className=\"service\">\n                  <Icon className=\"service_icon\">{service.icon}</Icon>\n                  <Typography className=\"service_title\" variant=\"h6\">\n                    {service.title}\n                  </Typography>\n                  <Typography className=\"service_description\" variant=\"body2\">\n                    {service.description}\n                  </Typography>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n      {/*Skills*/}\n      <Grid\n        container\n        spacing={3}\n        justify=\"space-between\"\n        className=\"section graybg pb_45 p_50\"\n      >\n        {resumeData.skills.map((skill) => (\n          <Grid item xs={12} sm={6} md={3}>\n            <Paper elevation={3} className=\"skill\">\n              <Typography className=\"skill_title\" variant=\"h6\">\n                {skill.title}\n              </Typography>\n              {skill.destription.map((element) => (\n                <Typography className=\"skill_description\" variant=\"body2\">\n                  <TimelineDot variant={\"outlined\"} className=\"timeline_dot\"></TimelineDot>\n                  {element}\n                </Typography>\n              ))}\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n      {/*Contact*/}\n      <Grid container className=\"section\"></Grid>\n    </>\n  );\n};\nexport default Resume;\n","import \"./App.css\";\nimport React from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport Profile from \"./components/Profile/Profile\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Portfolio from \"./pages/Portfolio/Portfolio\";\nimport Resume from \"./pages/Resume/Resume\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Container className={\"top_60\"}>\n      <Grid container spacing={5}>\n        <Grid item xs={12} sm={12} md={4} lg={3}>\n          <Profile />\n        </Grid>\n        <Grid item xs>\n          <Router>\n            <Header />\n            <div className=\"main_content container_shadow\">\n              <Switch>\n                <Route path=\"/portfolio\">\n                  <Portfolio />\n                </Route>\n                <Route path=\"/\">\n                  <Resume />\n                </Route>\n              </Switch>\n            </div>\n          </Router>\n          <Footer />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}